var lines = [];

lines.push("BBFBBBBRRL");
lines.push("FBFFFFBLRL");
lines.push("FBFBBFFRLR");
lines.push("FBFFFBFRLR");
lines.push("FFBBFFFLRR");
lines.push("FFBBBFFRRR");
lines.push("BFBBFBFLRL");
lines.push("BFFFBFFLRR");
lines.push("FBBBFFBLLR");
lines.push("BBFFBBFRRL");
lines.push("BFBBBBBRLR");
lines.push("FBBBBFFLLR");
lines.push("FFBFFFBLLR");
lines.push("FFBBFBFRRR");
lines.push("BBFBFFFRRR");
lines.push("FFBFFBBLLR");
lines.push("FBBFFBBLRL");
lines.push("FFBBBFBLLL");
lines.push("FFBFFBBLRR");
lines.push("FBFFBFBLLR");
lines.push("FFFBBBFLLL");
lines.push("BFBBFBFRLR");
lines.push("BBFBBBFLLL");
lines.push("FBBBFBBRLL");
lines.push("FFBBBBFRRL");
lines.push("BFBBBBFLRR");
lines.push("BBFBBFBLRL");
lines.push("FFBFFFBLRL");
lines.push("BFBBBBBRRR");
lines.push("FFFBFBFLLR");
lines.push("BFBFBBBLLR");
lines.push("FFBFBBBLRL");
lines.push("FFFBFBBLRR");
lines.push("BFFBFFFLLL");
lines.push("BFFFBFBLRL");
lines.push("BFBFFFBRLL");
lines.push("BBFFFFBRLR");
lines.push("FBBFFFBLRR");
lines.push("BFFFFBFLLL");
lines.push("BBBFFFFLLL");
lines.push("BFBFFBBRLL");
lines.push("BBFBFFFRRL");
lines.push("BFBBFFFRLR");
lines.push("BBFBFBFRRL");
lines.push("FBBFFBFRRL");
lines.push("BFBFBFFRRL");
lines.push("FFBFFFFLLR");
lines.push("FBBBFBBLLR");
lines.push("BBFFBFBRLL");
lines.push("BFFBFBBRLL");
lines.push("FBBFFFFRRR");
lines.push("BFFFBBBLRL");
lines.push("FFBBFFBLLL");
lines.push("FFFBBFFRRL");
lines.push("FBFBBBBLRR");
lines.push("FFBBBFFLLL");
lines.push("FBFBFFBRRR");
lines.push("FBBFFBBLLR");
lines.push("FBFFBFFRLL");
lines.push("BFBBBFFRLR");
lines.push("FBFFBBBLRR");
lines.push("FBFFFFBRLR");
lines.push("BBFFBBFLRL");
lines.push("FBFFBBFLRL");
lines.push("FBFBBFFRRR");
lines.push("BFBBBFBLRL");
lines.push("FBFBFFFLLR");
lines.push("FFFFBBBLLR");
lines.push("BFBFFBBLLR");
lines.push("BFFBBBFRLR");
lines.push("BFBBBFFLRR");
lines.push("BBFFFBBLLR");
lines.push("BFFFBBFLRL");
lines.push("FBFFBFBLRL");
lines.push("FBBBFFFRRL");
lines.push("FBFFFFBLLL");
lines.push("BFBFFBBRLR");
lines.push("BFBFBBBLRL");
lines.push("BFFBFBBRLR");
lines.push("FBBFBBBLLR");
lines.push("FFBFBFFRLL");
lines.push("FFFBBBBLRR");
lines.push("BFBFFFFLLL");
lines.push("BBFBFBBLLR");
lines.push("BFFFBBBRLR");
lines.push("FFBFFBFRLR");
lines.push("FBBFBBBLRL");
lines.push("BBFFFBBLLL");
lines.push("FFBFFBBRRR");
lines.push("FBBBBFBLLR");
lines.push("BBFBBFFRLL");
lines.push("BFBBBBFRLR");
lines.push("BBFBFFBRLR");
lines.push("FFBFFFFLLL");
lines.push("BBFBFBFRLL");
lines.push("FFBFFBBRLL");
lines.push("FBBFFFFRLR");
lines.push("FFBBBBBRRR");
lines.push("BBFFBBBLRL");
lines.push("BFFBBFBRLL");
lines.push("BFFFBBFRLL");
lines.push("BFFBFBFLRL");
lines.push("FBFFFFFRRR");
lines.push("BFFBFBBRRL");
lines.push("FBFBBBFLLR");
lines.push("FBFBFBBRLL");
lines.push("BBBFFFFRRR");
lines.push("BFBFBFFLRL");
lines.push("FFFFBFBRLL");
lines.push("FFBBFFBLRL");
lines.push("BBFFBFBLLL");
lines.push("BFFBBBBRLL");
lines.push("BFFBBBBRRR");
lines.push("BFBBBBFRRL");
lines.push("BBBFFFBLRL");
lines.push("FFBBFFFRRR");
lines.push("BFFFFFBRLR");
lines.push("FFFBBFBLLL");
lines.push("BFBFBBFRLR");
lines.push("FBBBFBFLRL");
lines.push("BFBFBFFRLR");
lines.push("BBFBBFFLRL");
lines.push("BFFFBFBLLL");
lines.push("BFFFFBBRLL");
lines.push("FFBFFFFRRL");
lines.push("BFFBFBBLLR");
lines.push("FFFFBBBLLL");
lines.push("FBBFFBBRRL");
lines.push("BFBFFFFLLR");
lines.push("FBFBFBFRLL");
lines.push("FBBBBBBLRR");
lines.push("BBFFFFBLRR");
lines.push("FFFFBFBRRR");
lines.push("FBBBBFBRLL");
lines.push("BBFBFBBLRR");
lines.push("FFBBFBFLLL");
lines.push("BFBBFFBLRL");
lines.push("FFFBBBBRRR");
lines.push("BFBBFFFRLL");
lines.push("BFBBBFBRRR");
lines.push("FFFFBBFRLR");
lines.push("FFBBFBFLRR");
lines.push("FFFFFBBLLR");
lines.push("BBFBBFBRLL");
lines.push("FBFBBBBRLR");
lines.push("BBFFFFBLRL");
lines.push("FBBFFFBLLR");
lines.push("FFBFFBBLLL");
lines.push("FFFBBBFLLR");
lines.push("FFFBBBFRRR");
lines.push("FFBBBFBRRR");
lines.push("FFFBBFFRRR");
lines.push("FFBBFFBLLR");
lines.push("BFBFFBFRRR");
lines.push("FFBFBBFLLR");
lines.push("BFFFFFFRRR");
lines.push("FFBFFBFLRL");
lines.push("BFFBFBBRRR");
lines.push("FBFBFFFRLL");
lines.push("BBBFFFBLLL");
lines.push("BFBBFBFRRL");
lines.push("BFFFFFBLRR");
lines.push("FBBBBBFRRR");
lines.push("FFBBBBFLRR");
lines.push("BBFBBBBLRR");
lines.push("BBFBFBFLLR");
lines.push("FFFFBBFRRR");
lines.push("FFBBBBBLLR");
lines.push("BFFFBFBRLR");
lines.push("FBBBFFBLLL");
lines.push("FFFFFFFRRR");
lines.push("FFFBFBFRRL");
lines.push("BFBBFBBLRR");
lines.push("FBBBBFBLRL");
lines.push("FBBBBFBRRR");
lines.push("BFFFFBFRRR");
lines.push("BFFBBFFLLL");
lines.push("FBBFBFBLRL");
lines.push("BFBBFFFRRL");
lines.push("FBFBFFBRLR");
lines.push("FBFFBFFLRR");
lines.push("BFFFBFBLLR");
lines.push("BFBBFFBRRR");
lines.push("BBFBBFBLLL");
lines.push("BFFBFFFLRR");
lines.push("FFFBBFFRLL");
lines.push("BFBBFFFLLL");
lines.push("BFFFBBBRLL");
lines.push("FBFFBBFRRR");
lines.push("FFBFBFBLLR");
lines.push("FBFFFFBLRR");
lines.push("FFBBFFFLLL");
lines.push("FFFBBBBRRL");
lines.push("BBFBFFFLLL");
lines.push("BBFFBBFLLR");
lines.push("BFBFBBBRRR");
lines.push("FBBBBFBRRL");
lines.push("FBFFFBFLLR");
lines.push("FBFBBBFRRR");
lines.push("BFFFBFBRRL");
lines.push("FBFBBBFLRL");
lines.push("BBFFBFFLRL");
lines.push("BBFBBFFLLR");
lines.push("FFFFBFFRLL");
lines.push("FFFBBBBLRL");
lines.push("FBBBFBFRLL");
lines.push("BBFFFBBLRL");
lines.push("FFFBFFBLRR");
lines.push("BBFBFBBRRL");
lines.push("FFFFBBBRRR");
lines.push("FFBBBBBLRL");
lines.push("FFFFFFBLLL");
lines.push("FBFFFFFRRL");
lines.push("FFFFFBBLRR");
lines.push("BFFFBBBRRL");
lines.push("FBBFFFFLRL");
lines.push("FFFFFBBRLR");
lines.push("FFBFFBFRLL");
lines.push("FFFBBBFRRL");
lines.push("BFBBBFFLRL");
lines.push("FFFFFBFLRR");
lines.push("BFBFBBBRLR");
lines.push("FBFBBBFLLL");
lines.push("BFBFFBFLRL");
lines.push("FFBFBFFRRR");
lines.push("FFBBFFFRLL");
lines.push("BFBFBFFLLL");
lines.push("FBFBFBBRLR");
lines.push("BFFBBBFRRL");
lines.push("FBFFBBBRRR");
lines.push("FBFBFBBLRR");
lines.push("BFBBBBFLLR");
lines.push("FFFBFFFRLR");
lines.push("BFBBFFBRRL");
lines.push("BFFFBFFLRL");
lines.push("BFBFBBFRRR");
lines.push("FBBFFBFLLL");
lines.push("FFFFFFBLRR");
lines.push("FBFFBFBLRR");
lines.push("FFBBBFFLRR");
lines.push("FBBBFFBRLL");
lines.push("BFFFBBBRRR");
lines.push("FFBFFFFRLL");
lines.push("BBFFFBFRRR");
lines.push("BFFBFBBLLL");
lines.push("BFBBFFBRLR");
lines.push("FFBFBBBLRR");
lines.push("FFFBFBBLLL");
lines.push("FFFBBFFLLL");
lines.push("FBBBBBBLRL");
lines.push("BFBFBBBLLL");
lines.push("BFBFFFFRRL");
lines.push("FFBFBBFRRR");
lines.push("FFBFBFBRRL");
lines.push("FFFBBBBRLL");
lines.push("BFFBFFBRLL");
lines.push("BBFFFFBRRL");
lines.push("FFBFBFBLLL");
lines.push("FFBFBFBRLL");
lines.push("FBFBBBFRRL");
lines.push("FBFFBBFRLR");
lines.push("BBBFFFFLRL");
lines.push("FBFBFFFRRL");
lines.push("FFFBFBFRLR");
lines.push("FBFBFBBRRL");
lines.push("BFBBFBBLLL");
lines.push("FFBBBBBRLL");
lines.push("BBFFBFBRRL");
lines.push("FFFBFFFRRR");
lines.push("FBBFBFBLLL");
lines.push("BFFFBFFRLR");
lines.push("FBFBFFBRLL");
lines.push("BBFBBFFLLL");
lines.push("FBBBBFFLRR");
lines.push("FFBBBFFLRL");
lines.push("FBBBFFBRRR");
lines.push("FFBBFBBRLR");
lines.push("FBFBBFFLLR");
lines.push("BFBBBFFLLR");
lines.push("FFFBBFFLRR");
lines.push("FBFFBFFLRL");
lines.push("BFBFBFFLRR");
lines.push("BBFBFFFLLR");
lines.push("FFFBBBBLLR");
lines.push("FFBBFFBRLL");
lines.push("BBBFFFBRLL");
lines.push("FBFFBFBRRL");
lines.push("BFBFFFFRLL");
lines.push("FBFBFBFRLR");
lines.push("BBFFFFFLLL");
lines.push("FFBFBBBLLR");
lines.push("FFBFBFFLRR");
lines.push("FBBBBFBRLR");
lines.push("FFBFBBBRLR");
lines.push("BFFBBBBLRL");
lines.push("FFBBBBBRLR");
lines.push("BFBBBFFRRR");
lines.push("FBFBBFBRLL");
lines.push("FFBFFFBRRL");
lines.push("BBFBFBFLLL");
lines.push("BFBBBFBRLR");
lines.push("BFBBFBFLLR");
lines.push("FBBFBFFRLL");
lines.push("FFBFBBFLRR");
lines.push("BFFBFBFRLL");
lines.push("FFBBFBBLRL");
lines.push("FBFBFBBLRL");
lines.push("BBFFFBFLLR");
lines.push("BFBFBBBLRR");
lines.push("BBFFBBBLLR");
lines.push("BBFFFFBRRR");
lines.push("BFFFFFBLRL");
lines.push("FBBBFBBRRR");
lines.push("BFBFFFBLLL");
lines.push("FFFBBFFLLR");
lines.push("BFFBBFFLLR");
lines.push("BBFBBBBLRL");
lines.push("FBBFBFFLRR");
lines.push("FBFBFFBLLR");
lines.push("BFFFFFFLLL");
lines.push("BFFBBFFRLL");
lines.push("BBFFFFFLLR");
lines.push("FBFFBBFRRL");
lines.push("FBBFFFFLLR");
lines.push("BFBFFBBRRL");
lines.push("FFBFFFBLLL");
lines.push("BFFFFFBLLR");
lines.push("FFBBBFBRRL");
lines.push("FFBBBBFLLR");
lines.push("BFBFFFBLLR");
lines.push("FFFFBFFRLR");
lines.push("BFBBFFBRLL");
lines.push("FFBBBBBLLL");
lines.push("FBBFBFFRRR");
lines.push("BFFFFFFLLR");
lines.push("FFBBBBBLRR");
lines.push("FFFFFBFRRR");
lines.push("BFFFBBBLLL");
lines.push("BFFFBFFRRR");
lines.push("FFBBBFBRLR");
lines.push("BFFBBBBLRR");
lines.push("BFBBBFFRRL");
lines.push("BFBFBFFRRR");
lines.push("BFBBFBBRLR");
lines.push("BFBBBBFRLL");
lines.push("FFBBBBFLLL");
lines.push("FFFBBFBLRR");
lines.push("FBBFBBFRLR");
lines.push("BBFBBFFLRR");
lines.push("FBBFBBBRRL");
lines.push("BFFBFFFRRL");
lines.push("BFFFFBFLRR");
lines.push("FFBFBBFLLL");
lines.push("FFBFBBBLLL");
lines.push("FBFFBFBRRR");
lines.push("FFFBFFBRLL");
lines.push("BFFFFBFLRL");
lines.push("FFFFBFFLLR");
lines.push("BBFBBBBRLL");
lines.push("FBFBBFBRRR");
lines.push("BFFFBBBLRR");
lines.push("FBFFFBFRLL");
lines.push("FFBBBFBLRL");
lines.push("FBFFFBBLRR");
lines.push("FFBBFBFRLR");
lines.push("FBBBBBFLRL");
lines.push("FFFFBFBLRR");
lines.push("BFBFBFBLRR");
lines.push("FFBBFFFLRL");
lines.push("BFFBBBFLLR");
lines.push("FFFFFFBRLR");
lines.push("FFBBBFBLRR");
lines.push("FBFBBFFRLL");
lines.push("BBFBFBFRLR");
lines.push("FBBFFFFLLL");
lines.push("BFBBFBFRRR");
lines.push("BFFBBBFRRR");
lines.push("FBFFFBFLRR");
lines.push("FBBFFBFLRL");
lines.push("BFBBFFFLRR");
lines.push("FFBFFFFLRL");
lines.push("BFFBFFBLLL");
lines.push("FFFBFBBRRR");
lines.push("BBFFBFFLRR");
lines.push("BBBFFFFRRL");
lines.push("FBBBFFBLRL");
lines.push("FBBFFBBLRR");
lines.push("FFBFBFFLLR");
lines.push("FFFBBFFRLR");
lines.push("FBBBFBBRLR");
lines.push("FFFFBBBLRR");
lines.push("BBFFBFBRRR");
lines.push("FBFBBFFLRL");
lines.push("FBBBBFFLLL");
lines.push("FFBFFBBRLR");
lines.push("BBFFFFFLRR");
lines.push("FFBFBFBRLR");
lines.push("FFBFBFBLRL");
lines.push("FBBBFBBLRL");
lines.push("FFFBFBBLRL");
lines.push("FBFBFFFRRR");
lines.push("BFFBFFFRLR");
lines.push("BFBBFFBLLR");
lines.push("BFBFFBFRLL");
lines.push("FBFBFBFRRR");
lines.push("FBFFFFBRLL");
lines.push("FFFFFBBRRR");
lines.push("FBBBFFFLRL");
lines.push("FFFBFFBRLR");
lines.push("BFBFFBFLRR");
lines.push("FBBFBBFRRL");
lines.push("BFBBBBFRRR");
lines.push("BFFFFBBLRR");
lines.push("FBFFFFFLLL");
lines.push("BFBFFFBRRL");
lines.push("FFFBFFBLRL");
lines.push("FFBFFFBLRR");
lines.push("FBBFFBFRLL");
lines.push("BBFBFFBLLL");
lines.push("BBFFBBFLLL");
lines.push("FFBBBFFRLL");
lines.push("BFBBFFFLRL");
lines.push("FBBFBFFLLR");
lines.push("FBFBFFBLLL");
lines.push("FFBBBFFLLR");
lines.push("FBBFFBFLRR");
lines.push("FBBFBBFRRR");
lines.push("BFFFFBBLLL");
lines.push("FFFBFFBLLR");
lines.push("FBFBFFFRLR");
lines.push("FBFBFBBRRR");
lines.push("FBFBBFBRRL");
lines.push("BBFBBFBRRR");
lines.push("FFFFBBBRLL");
lines.push("FBFFBBBLRL");
lines.push("BBBFFFFRLL");
lines.push("FBFFFBFLRL");
lines.push("BFFFFBFLLR");
lines.push("FBFBBFFRRL");
lines.push("BFFBFBBLRR");
lines.push("FBFBBBBRRL");
lines.push("FBFBFBBLLR");
lines.push("FBFFBBFLRR");
lines.push("FFFFBFFLLL");
lines.push("BFBFFFFRRR");
lines.push("BBFFBBBLRR");
lines.push("FBFFFFFLLR");
lines.push("BBFBFFFRLR");
lines.push("BFFFFBBRLR");
lines.push("FBFFFFFLRL");
lines.push("FBBBFBBLRR");
lines.push("BFFBBFBLLL");
lines.push("BFFBFBBLRL");
lines.push("BFFBBBFRLL");
lines.push("FFBFFBFRRR");
lines.push("BFBFBFBRLL");
lines.push("BBFBBFBLLR");
lines.push("FBFBBFBLRL");
lines.push("FBFFFBBRLR");
lines.push("BBFBFFBRLL");
lines.push("BBFFFBFRLR");
lines.push("FBBFFFBLLL");
lines.push("BBFBBBBLLL");
lines.push("BFFFFFFLRR");
lines.push("FBBBBBFRLL");
lines.push("BFFFBFBRRR");
lines.push("BFFFFFFLRL");
lines.push("FBBBBFBLRR");
lines.push("FBFFBBBRLR");
lines.push("FFBBFBFRRL");
lines.push("FFBBFBBRRL");
lines.push("FFFBFBFRRR");
lines.push("FFBBBBFLRL");
lines.push("BFBBFFFRRR");
lines.push("FBFBBBBRLL");
lines.push("FBFFBBFRLL");
lines.push("FFBFFFFRRR");
lines.push("BFFFFBBLLR");
lines.push("FBFBBFBLLR");
lines.push("BBFFBBBRRR");
lines.push("FBBFBBBRLR");
lines.push("BFBFBFFRLL");
lines.push("BFFBBFBLRL");
lines.push("BFFBFFFRRR");
lines.push("FFBBBFBRLL");
lines.push("FBFFBFFRRL");
lines.push("FBBBBFFRRR");
lines.push("FFFBBBFRLL");
lines.push("BBFFFBBRLL");
lines.push("BBFFFBBRLR");
lines.push("FFBBFFFRRL");
lines.push("BBFFBFBLRR");
lines.push("BBFBFFBRRR");
lines.push("BFBBBBBLRR");
lines.push("BFFBBFFLRL");
lines.push("BBFFFFBLLL");
lines.push("FFFFBFBRRL");
lines.push("FBBFFBBRRR");
lines.push("FBBBFFFLRR");
lines.push("FBBFBBFLRR");
lines.push("FBBBFBBLLL");
lines.push("FFFFBBFLRL");
lines.push("FFFFFBBLLL");
lines.push("BFBBBBBLLR");
lines.push("BFBFFFFLRR");
lines.push("FBFFFFBLLR");
lines.push("BBFFBBBRLL");
lines.push("FBFFBFFRRR");
lines.push("FFBBFBFLLR");
lines.push("BBFBBBFLRR");
lines.push("FBBBBBBRLL");
lines.push("FFFFFFBLLR");
lines.push("FFFFFBFRLR");
lines.push("FBFFBFBRLL");
lines.push("BBFFBFFRRR");
lines.push("BFFBFFFLLR");
lines.push("FFBBFBBLRR");
lines.push("BBFFBBBRLR");
lines.push("FFBBFFBRRL");
lines.push("FBBBBFFRRL");
lines.push("BFBFFFFRLR");
lines.push("BFBBBFBLLL");
lines.push("BFBFFFBRRR");
lines.push("FBBBFFFRLR");
lines.push("BFBBFFBLRR");
lines.push("BBFBBFFRLR");
lines.push("BBFFFBBRRR");
lines.push("FFFFBBBRRL");
lines.push("FFBFBBFRLL");
lines.push("FBFFFFBRRL");
lines.push("FBBBFFBRLR");
lines.push("FFBFFFBRRR");
lines.push("FBBBBBBLLL");
lines.push("BFFBFFBLRL");
lines.push("FBFFBBBRLL");
lines.push("BBFBBBFRLR");
lines.push("BFBFBFBRLR");
lines.push("BBFFFFBRLL");
lines.push("FFBBFBBLLR");
lines.push("FFBBFFBRLR");
lines.push("BBFBBBBRLR");
lines.push("BFBBBFBLLR");
lines.push("FFFFBFFRRR");
lines.push("BBFFFBFRRL");
lines.push("FBBFBBBLLL");
lines.push("FFFBFFFLRL");
lines.push("BFFFFBBRRR");
lines.push("FFFBFBFLRL");
lines.push("BBFFBBFRRR");
lines.push("FBBFFFFLRR");
lines.push("FFFBBBFLRL");
lines.push("BFFBBBFLLL");
lines.push("BFBBFFBLLL");
lines.push("FFFFFFBLRL");
lines.push("FBFFBFFLLL");
lines.push("FBBBBBBRRR");
lines.push("FBBFFBBRLR");
lines.push("BFFFBBBLLR");
lines.push("BBFBBBBRRR");
lines.push("BFBFBFFLLR");
lines.push("BFBFFBFRLR");
lines.push("FBBBFFFRRR");
lines.push("FFBFBBFRLR");
lines.push("FFFFFBFRLL");
lines.push("FFBFBBBRRR");
lines.push("BFBFFBBLLL");
lines.push("FBBBBBFRLR");
lines.push("FFBBFBBLLL");
lines.push("BFBFFBBLRL");
lines.push("FBBFBFBRRL");
lines.push("BFFBBBBRRL");
lines.push("FBBFFFBLRL");
lines.push("FBBFBFBLLR");
lines.push("FBBFBBBLRR");
lines.push("BFBBBFBRRL");
lines.push("FBBBFBFLLL");
lines.push("BFFFBFFLLR");
lines.push("FBBBFBFLRR");
lines.push("FFBFFBBLRL");
lines.push("BBFBBBBLLR");
lines.push("BFFFBFFLLL");
lines.push("FBFFFFFLRR");
lines.push("BBFBFBBLRL");
lines.push("BFBFBBFRRL");
lines.push("FBFBFFBLRR");
lines.push("BFFFFFFRRL");
lines.push("BFFFFBFRLR");
lines.push("BFBBFBBRLL");
lines.push("BBFFFFFRLL");
lines.push("FFBBFFFLLR");
lines.push("FFFBFFFLRR");
lines.push("FFFBFFBRRR");
lines.push("BBFBFFBLLR");
lines.push("BFFBFFFRLL");
lines.push("FBFBFFBRRL");
lines.push("BFBBBFFLLL");
lines.push("BBFFBFBLRL");
lines.push("FBFBBFFLRR");
lines.push("FBBFBBBRRR");
lines.push("FFFBBFBRLL");
lines.push("FBBFBFBRRR");
lines.push("BFFFBBFLLL");
lines.push("FBBBFFBLRR");
lines.push("BFBFFBBRRR");
lines.push("FFFFFFBRLL");
lines.push("BBFFFBFLRL");
lines.push("BFBFBFBRRR");
lines.push("BFFFBBFRLR");
lines.push("BFBFFFBLRR");
lines.push("FFFBFFBRRL");
lines.push("BBFFFBBRRL");
lines.push("BFBBBFBRLL");
lines.push("BFBFFFBLRL");
lines.push("FFFBFFFLLR");
lines.push("BFFBFFFLRL");
lines.push("BBFBBFBLRR");
lines.push("FBBBFBBRRL");
lines.push("FBBFBFFRLR");
lines.push("FBFFFFFRLR");
lines.push("FBBBBFFRLR");
lines.push("BFBFBBFRLL");
lines.push("BBFBFBFRRR");
lines.push("BFBFBFBRRL");
lines.push("FBBBBBBRLR");
lines.push("BFBFBBFLLR");
lines.push("BFFFBBFRRL");
lines.push("BBBFFFFRLR");
lines.push("BBBFFFBLLR");
lines.push("FBFBBBFLRR");
lines.push("FBFFFBBLRL");
lines.push("FBFFBBBLLR");
lines.push("BFBFBBFLRR");
lines.push("BFBBFBBLRL");
lines.push("BFFFFFBRRL");
lines.push("FFBBFFFRLR");
lines.push("BFFBBFFRLR");
lines.push("BFBFBFBLRL");
lines.push("BFFBFBFRLR");
lines.push("FFBBFFBRRR");
lines.push("BFBBBBBLLL");
lines.push("BBFFFFFRRL");
lines.push("BBFFFFFLRL");
lines.push("FFFBBFFLRL");
lines.push("BFBBFBFRLL");
lines.push("FFFBBBBLLL");
lines.push("FFFFFBFLRL");
lines.push("FFFFBBFLRR");
lines.push("FBFFFBFRRR");
lines.push("BFFBBBBLLL");
lines.push("BBFBBFFRRL");
lines.push("BFFFBBFLLR");
lines.push("FBBBFFFLLL");
lines.push("FFBFFBBRRL");
lines.push("BFBBBFBLRR");
lines.push("BFFBBBFLRL");
lines.push("BFBBBBBRLL");
lines.push("FFFBBBFRLR");
lines.push("FFFFBFFRRL");
lines.push("FFBFBFFLLL");
lines.push("BBFBFFFLRL");
lines.push("BFFFBBFLRR");
lines.push("FFFBFBFRLL");
lines.push("BFBFFBBLRR");
lines.push("FFFBFBBLLR");
lines.push("BBFFFFFRLR");
lines.push("FFBFBFFRRL");
lines.push("FFFFFBBLRL");
lines.push("FBBBFBFRRL");
lines.push("FBBBBFBLLL");
lines.push("FFFFBBBRLR");
lines.push("FBBBBFFLRL");
lines.push("BFBBBBBRRL");
lines.push("BBFFBFBLLR");
lines.push("FBFBFFFLRL");
lines.push("FBFFFBFRRL");
lines.push("FFFBBFBLRL");
lines.push("BFFFFFBLLL");
lines.push("BFFBFBFLLL");
lines.push("FFFFBBFRRL");
lines.push("FFFBFBBRLR");
lines.push("FBFBBBBRRR");
lines.push("FBFFBBBLLL");
lines.push("FFBBBBFRRR");
lines.push("BFFFFBFRLL");
lines.push("BBFBFBBRLR");
lines.push("BFFBBBFLRR");
lines.push("FBBFBFFRRL");
lines.push("FFFFFBFLLL");
lines.push("BBFBFBFLRR");
lines.push("FFBFBBFLRL");
lines.push("BFFBBFBRLR");
lines.push("FFBBBFFRLR");
lines.push("FFFBBFBRLR");
lines.push("FBFBBBBLLR");
lines.push("BFFBBBBLLR");
lines.push("BBFBFBFLRL");
lines.push("BBFFFFFRRR");
lines.push("FFFBFFFRRL");
lines.push("FBBFFBFRRR");
lines.push("BBFFBFFRLL");
lines.push("FFBBFBFRLL");
lines.push("FFFFBFBLLR");
lines.push("BBFFBBFRLL");
lines.push("BFBBBBFLRL");
lines.push("FBFFBFFRLR");
lines.push("BFBFBBFLLL");
lines.push("FFFFBBFLLL");
lines.push("BFBBBBBLRL");
lines.push("FFBFBFBLRR");
lines.push("BFFFFFBRRR");
lines.push("FBFBBBBLRL");
lines.push("FBBFBBFLLR");
lines.push("FBBFFFFRRL");
lines.push("FBFFFBFLLL");
lines.push("FBFFBBBRRL");
lines.push("FFBFFFFRLR");
lines.push("FBBFBBBRLL");
lines.push("FFFFBFBRLR");
lines.push("FFBFBBBRRL");
lines.push("BFFBFBFRRL");
lines.push("FFBFFBFLLL");
lines.push("BFFBFBFLRR");
lines.push("BBFBFFBLRL");
lines.push("BBFFBFFLLR");
lines.push("BFBBBBFLLL");
lines.push("BBFBBFFRRR");
lines.push("BBFFFBBLRR");
lines.push("BFBFFBFRRL");
lines.push("FBBFBFBLRR");
lines.push("BBFBBBFRRR");
lines.push("FFFBBFBLLR");
lines.push("FFFBFFFLLL");
lines.push("FBBBFBFLLR");
lines.push("BFBBFBFLLL");
lines.push("BFBFBFBLLL");
lines.push("BBFFBBFLRR");
lines.push("FFFBFBFLRR");
lines.push("BFFFFFFRLR");
lines.push("BBFBFBBRRR");
lines.push("BBFFFBFRLL");
lines.push("FFFFBBFRLL");
lines.push("FBBFBBFRLL");
lines.push("FBFFFFBRRR");
lines.push("FBFFBBFLLR");
lines.push("BFFBFFBLLR");
lines.push("FFBFFBFLRR");
lines.push("FBFFBFBRLR");
lines.push("FBFBBFFLLL");
lines.push("FBBFFFBRRL");
lines.push("FBFBFBFRRL");
lines.push("FFBFBFBRRR");
lines.push("FBFBFBFLRL");
lines.push("FFFBFBBRLL");
lines.push("FBBBFFFLLR");
lines.push("FFBBBBFRLL");
lines.push("FBFFFBBRLL");
lines.push("BFFBFFBLRR");
lines.push("FBBFBBFLRL");
lines.push("FBFFFBBRRR");
lines.push("FBFFFBBLLR");
lines.push("BFFBFFBRRR");
lines.push("FBBBFBFRRR");
lines.push("FBFFFFFRLL");
lines.push("BBFBBBFRLL");
lines.push("FFFBFFBLLL");
lines.push("FFBFFFFLRR");
lines.push("FBFFFBBRRL");
lines.push("BBFFBFFRLR");
lines.push("FBFBFBBLLL");
lines.push("FBBBBBBLLR");
lines.push("FBFBBFBLLL");
lines.push("BBFBFFFLRR");
lines.push("BFFFFBBRRL");
lines.push("BBFFFBFLRR");
lines.push("FFBFFFBRLL");
lines.push("FFFFBBBLRL");
lines.push("BFBBBFFRLL");
lines.push("BBFBFFFRLL");
lines.push("FBFBBBBLLL");
lines.push("BBFBBFBRLR");
lines.push("BBFFBFBRLR");
lines.push("BFBFFFFLRL");
lines.push("FBBBFBFRLR");
lines.push("FFBFFFBRLR");
lines.push("FBBBBBFLLR");
lines.push("FFBBBFBLLR");
lines.push("BFFBBFBRRL");
lines.push("BBFFBFFRRL");
lines.push("FFFFFFBRRR");
lines.push("FFBBFBBRRR");
lines.push("FBBBBBBRRL");
lines.push("BFFBBFFRRL");
lines.push("FBBFBFBRLR");
lines.push("FBBFFFFRLL");
lines.push("FBBBBBFLLL");
lines.push("FBBFFFBRRR");
lines.push("BFFFFBBLRL");
lines.push("FFFFBFBLLL");
lines.push("FBFBFFFLLL");
lines.push("FBFBBFBLRR");
lines.push("FFFFBFFLRR");
lines.push("FFFBBBFLRR");
lines.push("FBFFBFFLLR");
lines.push("BBFFBFFLLL");
lines.push("FFBFFBFRRL");
lines.push("BFBBFBBRRR");
lines.push("BBFFFBFLLL");
lines.push("FBFFBFBLLL");
lines.push("BFFBFFBRRL");
lines.push("BBFBFFBLRR");
lines.push("FBFBFFFLRR");
lines.push("BFBBFBBLLR");
lines.push("BFFBBFFRRR");
lines.push("FFFFFFBRRL");
lines.push("BBBFFFFLLR");
lines.push("BFBFFBFLLL");
lines.push("FBBBBBFRRL");
lines.push("BFFBBBBRLR");
lines.push("FFBBFBFLRL");
lines.push("FBFBFFBLRL");
lines.push("FFBBBBFRLR");
lines.push("BBFBBFBRRL");
lines.push("FFFFFBFLLR");
lines.push("FBFBFBFLLL");
lines.push("BFBFBFBLLR");
lines.push("FFFBFFFRLL");
lines.push("BFFBBFBLLR");
lines.push("FFBBFBBRLL");
lines.push("FFFBBFBRRL");
lines.push("FBBFFBBLLL");
lines.push("FFFBBBBRLR");
lines.push("FFFBBFBRRR");
lines.push("BBFFBBBRRL");
lines.push("FBBFBFFLRL");
lines.push("FBBBBBFLRR");
lines.push("BBFBFFBRRL");
lines.push("FFFBFBFLLL");
lines.push("FBBBFFFRLL");
lines.push("BFFBFBFLLR");
lines.push("FFBBBBBRRL");
lines.push("BFFBBFFLRR");
lines.push("FBBFBFBRLL");
lines.push("BFFFBFFRRL");
lines.push("BBFFFFBLLR");
lines.push("BBFFBBFRLR");
lines.push("BFFFBBFRRR");
lines.push("FBFBBFBRLR");
lines.push("FFFFFBBRLL");
lines.push("FBBFFFBRLL");
lines.push("BFFFFFBRLL");
lines.push("BFFFBFBLRR");
lines.push("BFFBFFBRLR");
lines.push("FFFFBFBLRL");
lines.push("FFBFFBFLLR");
lines.push("FBBFBFFLLL");
lines.push("BFFBFBFRRR");
lines.push("BBFBBBFLRL");
lines.push("BBBFFFFLRR");
lines.push("BFBBFFFLLR");
lines.push("FBBFFFBRLR");
lines.push("FFFFFBFRRL");
lines.push("FFFBFBBRRL");
lines.push("BBBFFFBLRR");
lines.push("FFBFBBFRRL");
lines.push("FFBBFFBLRR");
lines.push("BBFFBBBLLL");
lines.push("BFBFBBBRRL");
lines.push("BFFFBFBRLL");
lines.push("FFBFBBBRLL");
lines.push("FBFBFBFLRR");
lines.push("FBFFFBBLLL");
lines.push("FBBFFBFLLR");
lines.push("BFFFFBFRRL");
lines.push("FFBBBFFRRL");
lines.push("FFBFBFFLRL");
lines.push("BBFBBBFLLR");
lines.push("FBBFFBFRLR");
lines.push("FBBFFBBRLL");
lines.push("BFBFFFBRLR");
lines.push("BFFFBFFRLL");
lines.push("BBFBFBBRLL");
lines.push("BFFFFFFRLL");
lines.push("FBFBBBFRLL");
lines.push("BFBBFBFLRR");
lines.push("BFBFBBBRLL");
lines.push("BBFBBBFRRL");
lines.push("BFFBBFBRRR");
lines.push("BFBFFBFLLR");
lines.push("FBFBFBFLLR");
lines.push("FFFFFBBRRL");
lines.push("FBFBBBFRLR");
lines.push("FBFFBBFLLL");
lines.push("FFBFBFFRLR");
lines.push("BBFBFBBLLL");
lines.push("FFFFBFFLRL");
lines.push("FBBFBBFLLL");
lines.push("BFBFBBFLRL");
lines.push("FFFFBBFLLR");
lines.push("BFBBFBBRRL");
lines.push("FBBBFFBRRL");
lines.push("FBBBBFFRLL");

function calculateFB(s) {
  var fRow = 0, lRow = 127, i;
  for (i = 0; i < 7; i++) {
    var x = s.substr(i, 1);
    var half = (lRow - fRow + 1) / 2;
    // console.log(x,fRow,lRow,half);
    if (x == "F") {
      lRow = fRow + half - 1;
    } else {
      fRow = lRow - half + 1;
    }
    // console.log(" > fRow",fRow,"lRow",lRow);
  }
  return fRow;
}

function calculateLR(s) {
  var fRow = 0, lRow = 7, i;
  for (i = 0; i < 3; i++) {
    var x = s.substr(i, 1);
    var half = (lRow - fRow + 1) / 2;
     //console.log(x,fRow,lRow,half);
    if (x == "L") {
      lRow = fRow + half - 1;
    } else {
      fRow = lRow - half + 1;
    }
    //console.log(" > fRow",fRow,"lRow",lRow);
  }
  return fRow;
}

function calculateFBLR(s) {
  var row = calculateFB(s.substr(0, 7));
  var col = calculateLR(s.substr(-3));
  rslt = row * 8 + col;
  return [rslt, row, col];
}

var flight=Array(128);
var ix, jx = lines.length;
var score = -1, rslt, row, col;
for (ix = 0; ix < 128; ix++) {
  flight[ix]=[".",".",".",".",".",".",".","."];
}
for (ix = 0; ix < jx; ix++) {
  [rslt, row, col] = calculateFBLR(lines[ix]);
  // console.log(lines[ix]);
  // console.log(ix, rslt, score);
  if (rslt > score) score = rslt;
  r=flight[row];
  r[col]="X";
  flight[row]=r;
}
console.log("Best score:", score,"(part 1)");

// console.table(flight);

for (ix = 0; ix < 128; ix++) {
  r=flight[ix].join("");
  // console.log(ix, r);
  n=r.search(/X\.X/);
  if(n>-1) {
    console.log("Found it:",ix,n+1,"ID:", (ix*8+n+1),"(part 2)");
    break;
  }
}
